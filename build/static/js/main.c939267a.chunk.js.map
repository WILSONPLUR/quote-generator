{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","author","setAuthor","fetchContent","fetch","then","res","json","quote","content","useEffect","className","maxW","style","marginTop","as","size","colorScheme","marginRight","variant","onClick","navigator","clipboard","writeText","console","log","err","error","leftIcon","href","isExternal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oRAwEeA,MAlEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIPC,EAAe,WACnBC,MAAM,iCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAQQ,EAAMC,SACdP,EAAUM,EAAMP,YAgBtB,OAHAS,qBAAU,WACRP,MACC,IAED,qBAAKQ,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,eAAC,IAAD,CAAWC,KAAK,eAAeC,MAAO,CAAEC,UAAW,IAAnD,UACE,cAAC,IAAD,CAASH,UAAU,aAAaI,GAAG,KAAKC,KAAK,KAA7C,SACGjB,IAEH,cAAC,IAAD,CAAOc,MAAO,CAAEC,UAAW,IAAMG,YAAY,SAA7C,SACGhB,OAGL,cAAC,IAAD,CACEY,MAAO,CAAEC,UAAW,GAAII,YAAa,IACrCD,YAAY,OACZE,QAAQ,QACRC,QAASjB,EAJX,qBAQA,cAAC,IAAD,CACEiB,QAjCK,WACXC,UAAUC,UAAUC,UAAUxB,GAAMM,MAClC,WACEmB,QAAQC,IAAI,kDAEd,SAACC,GACCF,QAAQG,MAAM,+BAAgCD,OA4B5Cb,MAAO,CAAEC,UAAW,GAAII,YAAa,IACrCD,YAAY,OACZE,QAAQ,QAJV,kBAQA,cAAC,IAAD,CACEF,YAAY,WACZW,SAAU,cAAC,IAAD,IACVf,MAAO,CAAEC,UAAW,IAHtB,SAKE,cAAC,IAAD,CAAMe,KAAK,0BAA0BC,YAAU,EAA/C,6DCnDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.c939267a.chunk.js","sourcesContent":["// @ts-nocheck\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Button, Heading, Badge, Link } from \"@chakra-ui/react\";\nimport { FaTelegram } from \"react-icons/fa\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n\n  const fetchContent = () => {\n    fetch(\"http://api.quotable.io/random\")\n      .then((res) => res.json())\n      .then((quote) => {\n        setText(quote.content);\n        setAuthor(quote.author);\n      });\n  };\n  const copy = () => {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        console.log(\"Async: Copying to clipboard was successful!\");\n      },\n      (err) => {\n        console.error(\"Async: Could not copy text: \", err);\n      }\n    );\n  };\n  useEffect(() => {\n    fetchContent();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"quote-card\">\n        <Container maxW=\"container.lg\" style={{ marginTop: 40 }}>\n          <Heading className=\"quote-text\" as=\"h3\" size=\"lg\">\n            {text}\n          </Heading>\n          <Badge style={{ marginTop: 10 }} colorScheme=\"purple\">\n            {author}\n          </Badge>\n        </Container>\n        <Button\n          style={{ marginTop: 30, marginRight: 10 }}\n          colorScheme=\"pink\"\n          variant=\"solid\"\n          onClick={fetchContent}\n        >\n          Refresh\n        </Button>\n        <Button\n          onClick={copy}\n          style={{ marginTop: 30, marginRight: 10 }}\n          colorScheme=\"teal\"\n          variant=\"solid\"\n        >\n          Copy\n        </Button>\n        <Button\n          colorScheme=\"telegram\"\n          leftIcon={<FaTelegram />}\n          style={{ marginTop: 30 }}\n        >\n          <Link href=\"https://t.me/worldofsut\" isExternal>\n            Telegram-канал\n          </Link>\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}